!function(){"use strict";angular.module("storelitedb",[]).run(["$rootScope",function(e){}])}(),angular.module("storelitedb").constant("DBConfig",{showLogs:!0,storageType:"sqlite",dbName:"custom.db",dbSize:5242880,enableMigrations:!1}),angular.module("storelitedb").service("Database",["$q","DBConfig","DBUtil","Log","Loading",function(a,n,s,u,e){var l=null,c=this,r="",i=[],f=n;this.query=function(r,i){return i=i||[],a(function(t,o){l.transaction(function(e){e.executeSql(r,i,function(e,n){return u.success("Query: "+r,[n,i],f.showLogs),t(n)},function(e,n){window.cordova&&window.plugins.toast.show("The query had an error","long","top"),u.DBException(n,r,i,f.showLogs),o(n)})})})},this.setConnectionOptions=function(e){f=angular.extend(n,e||{})},this.connect=function(){return null==l?window.sqlitePlugin?(l=window.sqlitePlugin.openDatabase({name:f.dbName,location:"default"}),u.info("sqlite.connection",l,f.showLogs)):(l=window.openDatabase(f.dbName,"1.0","Test Web SQL Database",f.dbSize),u.info("WebSql.connection",l,f.showLogs)):u.info("cache.connection",l,f.showLogs),this},this.initialize=function(o){var r=[o],n=a.defer();if(null==l){u.info("connect.db",void 0,f.showLogs);var i=this.connect(),t="SELECT sql FROM sqlite_master WHERE tbl_name = '{tableName}' AND type = 'table'";t=t.replace("{tableName}",o.tableName),c.query(t).then(function(e){if(0==e.rows.length){u.info("creating.db",o,f.showLogs),f.enableMigrations&&r.push({tableName:"migrations",columns:{id:"INTEGER PRIMARY KEY AUTOINCREMENT",path:"TEXT NOT NULL",status:"INT NOT NULL",created:"INT NOT NULL"}});var t=[];return angular.forEach(r,function(e,n){t.push(i.create(e.tableName,e.columns))}),a.all(t).then(function(){return n.resolve(i)},function(e){return e=null==e||"length"in e?e:[e],angular.forEach(e,function(e,n){u.DBException(e,o,r,f.showLog)}),n.reject("Cannot was possible run the query")})}(f.enableMigrations?function(r){return a(function(t,o){c.query("SELECT sql FROM sqlite_master WHERE tbl_name = 'migrations' AND type = 'table'").then(function(e){if(0==e.rows.length){var n={tableName:"migrations",columns:{id:"INTEGER PRIMARY KEY AUTOINCREMENT",path:"TEXT NOT NULL",status:"INT NOT NULL",created:"INT NOT NULL"}};u.info("creating.migrations.db",n,f.showLog),r.create(n.tableName,n.columns).then(t,function(e){u.DBException(e,n,f.showLog),o(e)})}else t(null)})})}(i):a.resolve()).then(function(){return u.info("loading.db",o,f.showLogs),n.resolve(i)},function(){return n.reject("Cannot was possible create the migrations table")})},function(e){u.DBException(e,t),n.reject(e)})}else u.info("cached.db"),n.resolve(l);return n.promise},this.create=function(e,n,t){t=angular.isUndefined(t)?"IF NOT EXISTS":"";var o=s.prepareFields(n,"create"),r="CREATE TABLE {notExist} {tableName} ({fields});".replace("{tableName}",e).replace("{notExist}",t).replace("{fields}",o.field);return c.query(r,[])},this.drop=function(e,n){return n=angular.isUndefined(n)?"IF EXISTS ":"",c.query("DROP TABLE "+n+e,[])},this.insert=function(e,n){var t=s.prepareFields(n,"insert"),o="INSERT INTO {tableName} ({fields}) values({values})";return o=o.replace("{tableName}",e).replace("{fields}",t.field.join(",")).replace("{values}",t.field.map(function(e){return"?"})),c.query(o,t.values)},this.update=function(e,n,t){var o=s.prepareFields(n,"update"),r=s.prepareConditions(t),i="UPDATE {tableName} SET {fields} WHERE {condition};";return i=i.replace("{tableName}",e).replace("{fields}",o.field.join(",")).replace("{condition}",r.rules.join(" AND ")),c.query(i,o.values.concat(r.values))},this.remove=function(e,n){var t=s.prepareConditions(n),o="DELETE FROM "+e;return angular.isDefined(n)&&(o+=" WHERE "+t.rules.join(" AND ")+";"),c.query(o,t.values)},this.select=function(e){return r="SELECT "+e.join(", "),this},this.from=function(e){return r+=" FROM "+e,this},this.where=function(e){var n=s.prepareConditions(e);return r+=" WHERE "+n.rules.join(" AND "),i=n.values,this},this.all=function(){return a(function(o,n){if(""==r)return n("no query found");c.query(r,i).then(function(e){r=null,i=[];for(var n=[],t=0;t<e.rows.length;t++)n.push(e.rows.item(t));o(n)},function(e){n(e)})})},this.one=function(){return a(function(n,t){if(""==r)return t("no query found");c.query(r+" LIMIT 1",i).then(function(e){r=null,i=[],0==e.rows.length?t("no result found"):n(e.rows.item(0))},function(e){t(e)})})}}]),angular.module("storelitedb").factory("DBUtil",function(){function t(e,n){localStorage.setItem(e,n)}function n(e){return localStorage.getItem(e)}return{prepareFields:function(e,n){var t={field:[],values:[]};for(var o in e)switch(t.values.push(e[o]),n){case"create":t.field.push(o+" "+e[o]);break;case"insert":t.field.push(o);break;case"update":t.field.push(o+" = ?")}return t},prepareConditions:function(e){var n={values:[],rules:[]};for(var t in e){var o="= ?";if("object"==typeof e[t])switch((o=e[t].operator).toLowerCase()){case"in":case"not in":case"between":value=e[t].value.map(function(e){return n.values.push(e),"?"}).join("between"==o.toLowerCase()?" AND ":","),o="between"==o.toLowerCase()?o+" "+value:o+"("+value+")";break;default:n.values.push(e[t].value),o+=" ?"}else n.values.push(e[t]);n.rules.push(t+" "+o)}return n},get:n,set:t,setObject:function(e,n){t(e,angular.toJson(n))},getObject:function(e){return angular.fromJson(n(e))}}});